group 'com.cloud'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile 'mysql:mysql-connector-java'
    //配置mybatis 数据源
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
    testCompile('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.0')

    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '1.5.9.RELEASE'

    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.46'

    //redis
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '1.5.9.RELEASE'

    classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6-rc1")
}
plugins {

    id "org.sonarqube" version "2.6-rc1"
}

//
task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}

task cleanSqlmaps(type: Delete) {
    def files = fileTree("${buildDir}/classes/java", {
        include "**/*.xml"
    })
    delete files
}

task copySqlmaps(type: Copy, dependsOn: cleanSqlmaps) {
    from "${projectDir}/src/main/java"
    include "**/*.xml"
    into "${buildDir}/classes/java/main"
    includeEmptyDirs = false
}

processResources.dependsOn {
    copySqlmaps
}